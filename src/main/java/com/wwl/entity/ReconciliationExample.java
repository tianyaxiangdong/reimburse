package com.wwl.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ReconciliationExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public ReconciliationExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andReconciliationIdIsNull() {
            addCriterion("reconciliation_id is null");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdIsNotNull() {
            addCriterion("reconciliation_id is not null");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdEqualTo(Integer value) {
            addCriterion("reconciliation_id =", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdNotEqualTo(Integer value) {
            addCriterion("reconciliation_id <>", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdGreaterThan(Integer value) {
            addCriterion("reconciliation_id >", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("reconciliation_id >=", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdLessThan(Integer value) {
            addCriterion("reconciliation_id <", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdLessThanOrEqualTo(Integer value) {
            addCriterion("reconciliation_id <=", value, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdIn(List<Integer> values) {
            addCriterion("reconciliation_id in", values, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdNotIn(List<Integer> values) {
            addCriterion("reconciliation_id not in", values, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdBetween(Integer value1, Integer value2) {
            addCriterion("reconciliation_id between", value1, value2, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationIdNotBetween(Integer value1, Integer value2) {
            addCriterion("reconciliation_id not between", value1, value2, "reconciliationId");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateIsNull() {
            addCriterion("reconciliation_date is null");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateIsNotNull() {
            addCriterion("reconciliation_date is not null");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateEqualTo(Date value) {
            addCriterionForJDBCDate("reconciliation_date =", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("reconciliation_date <>", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateGreaterThan(Date value) {
            addCriterionForJDBCDate("reconciliation_date >", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("reconciliation_date >=", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateLessThan(Date value) {
            addCriterionForJDBCDate("reconciliation_date <", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("reconciliation_date <=", value, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateIn(List<Date> values) {
            addCriterionForJDBCDate("reconciliation_date in", values, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("reconciliation_date not in", values, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("reconciliation_date between", value1, value2, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("reconciliation_date not between", value1, value2, "reconciliationDate");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultIsNull() {
            addCriterion("reconciliation_result is null");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultIsNotNull() {
            addCriterion("reconciliation_result is not null");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultEqualTo(Integer value) {
            addCriterion("reconciliation_result =", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultNotEqualTo(Integer value) {
            addCriterion("reconciliation_result <>", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultGreaterThan(Integer value) {
            addCriterion("reconciliation_result >", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultGreaterThanOrEqualTo(Integer value) {
            addCriterion("reconciliation_result >=", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultLessThan(Integer value) {
            addCriterion("reconciliation_result <", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultLessThanOrEqualTo(Integer value) {
            addCriterion("reconciliation_result <=", value, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultIn(List<Integer> values) {
            addCriterion("reconciliation_result in", values, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultNotIn(List<Integer> values) {
            addCriterion("reconciliation_result not in", values, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultBetween(Integer value1, Integer value2) {
            addCriterion("reconciliation_result between", value1, value2, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationResultNotBetween(Integer value1, Integer value2) {
            addCriterion("reconciliation_result not between", value1, value2, "reconciliationResult");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescIsNull() {
            addCriterion("reconciliation_desc is null");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescIsNotNull() {
            addCriterion("reconciliation_desc is not null");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescEqualTo(Object value) {
            addCriterion("reconciliation_desc =", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescNotEqualTo(Object value) {
            addCriterion("reconciliation_desc <>", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescGreaterThan(Object value) {
            addCriterion("reconciliation_desc >", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescGreaterThanOrEqualTo(Object value) {
            addCriterion("reconciliation_desc >=", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescLessThan(Object value) {
            addCriterion("reconciliation_desc <", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescLessThanOrEqualTo(Object value) {
            addCriterion("reconciliation_desc <=", value, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescIn(List<Object> values) {
            addCriterion("reconciliation_desc in", values, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescNotIn(List<Object> values) {
            addCriterion("reconciliation_desc not in", values, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescBetween(Object value1, Object value2) {
            addCriterion("reconciliation_desc between", value1, value2, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andReconciliationDescNotBetween(Object value1, Object value2) {
            addCriterion("reconciliation_desc not between", value1, value2, "reconciliationDesc");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createtime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createtime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createtime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createtime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createtime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createtime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createtime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createtime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createtime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createtime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createtime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createtime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreateuserIsNull() {
            addCriterion("createuser is null");
            return (Criteria) this;
        }

        public Criteria andCreateuserIsNotNull() {
            addCriterion("createuser is not null");
            return (Criteria) this;
        }

        public Criteria andCreateuserEqualTo(Integer value) {
            addCriterion("createuser =", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserNotEqualTo(Integer value) {
            addCriterion("createuser <>", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserGreaterThan(Integer value) {
            addCriterion("createuser >", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserGreaterThanOrEqualTo(Integer value) {
            addCriterion("createuser >=", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserLessThan(Integer value) {
            addCriterion("createuser <", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserLessThanOrEqualTo(Integer value) {
            addCriterion("createuser <=", value, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserIn(List<Integer> values) {
            addCriterion("createuser in", values, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserNotIn(List<Integer> values) {
            addCriterion("createuser not in", values, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserBetween(Integer value1, Integer value2) {
            addCriterion("createuser between", value1, value2, "createuser");
            return (Criteria) this;
        }

        public Criteria andCreateuserNotBetween(Integer value1, Integer value2) {
            addCriterion("createuser not between", value1, value2, "createuser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table _reconciliation
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 20 14:42:37 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table _reconciliation
     *
     * @mbggenerated Fri Nov 20 14:42:37 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}